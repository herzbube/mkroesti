* TODOs in the code
* try to improve handling of large inputs
* find out why adler32 and crc32 checksums (provided by zlib module) are not correct
  * adler32 for "foo": expected = 45018202 (hex, i.e. dec = 1157726722), actual = 42074437 (dec)
  * crc32 for "foo": expected = A5C4FE49 (hex, i.e. dec = 2781150793), actual = -1938594527 (dec)
  * see issue 1202: http://bugs.python.org/issue1202
    * as per standard, the result should always be an unsigned number
    * python 2.x implementation always returns a signed number
* implement missing hashes
  * crypt-apr1
  * crypt-md5
  * ripemd ("ripemd" currently is an alias)
  * haval-*-[45]
    * http://www.theserverpages.com/php/manual/en/ref.mhash.php
  * tiger2
  * mysql-passwd
* add even more hashes
  * HAS-160
  * MDC-2 (probably provided by hashlib)
  * N-Hash
  * RadioGat√∫n
  * HAS-V
  * MASH-1, MASH-2
  * hashemall.com has "3 passes" and "4 passes" variants of tiger-128/160/192; mkroesti currently provides the "3 passes" variant only
* add test suite
* add GPL
  * COPYING file
  * file header
* write ReleaseSteps
* start filling in ChangeLog
* write INSTALL
* add section "How to extend mkroesti" to README
* add section "How to test" to README
* add section "How to generate documentation" to README
* add section "Dependencies" to README
* fix MANUAL so that a proper man page can be generated from it
* create a web page
* add a nice "long description" to setup.py
* rename script mkroesti.py to mkroesti
* create repository for mkroesti
* register with PyPI?
* add -V/--version option; encode version in __init__.py