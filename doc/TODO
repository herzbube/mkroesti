Purpose of this document
------------------------
This document contains a list of minor features and technical stuff that should
be implemented when time permits it. The TODO list is updated frequently as new
ideas crop up during programming.

For a broader view of how the project will develop over time, you should see
the Roadmap document.


Release blockers
----------------
None


Priority 1 (important)
----------------------
- fix issue 84 (windows-nt algorithm requires unicode string input)
- check with a third-party source whether the following test result files in
  tests/testdata/result contain the correct hash values
  - base16
  - base32
  - sha-0
  - sha-224
  - ripemd-256
  - ripemd-320
  - snefru-128
  - windows-nt
- mhash implementation of crc32b should be disabled because it returns a
  wrong result (byte-order is wrong, e.g. 47f1823b instead of 3b82f147)
- check if all algorithms return the correct value for needBytesInput()
- fix TODOs in the code
- fix mkroesti-test so that the test of the interactive input method always
  succeeds (currently the test fails sometimes); this is important because an
  unreliable test suite does not inspire very much confidence; remove comment
  in TESTING document if this is fixed
- write a script that performs pre-release tests (see ReleaseSteps for ideas)
- To work around issue 95, I have replaced the umlaut character "Ã¤" in setup.py
  and src/scripts/mkroesti. Find a better solution for the problem (i.e. fix
  issue 95), then revert the workaround


Priority 2 (nice to have)
-------------------------
- use doxygen to generate man page (instead of/in addditon to pandoc); document
  how to do this in README
- try to improve handling of large inputs
- The following has been reported as issue 6860 on the Python bugtracker
  (http://bugs.python.org/issue6860). Think about modifying setup.py as soon as a
  fix for the issue becomes available. The issue: "./setup.py test -h" uses the
  command class' name in its output. The correct thing to do would be to use the
  key of the cmdclass dictionary specified to the setup() function. For instance,
  "./setup.py --help-commands" uses the correct name. The issue here is that I
  am forced to choose a class name that is suitable for display to the user.
  The reported behaviour exists in Python 2.5, 2.6, 3.0 and 3.1.


Priority 3 (not important)
-------------------------
- register with PyPI
- mkroesti.cgi: use xml.dom to construct the HTML document
- for a possible source of the HAVAL algorithm, see
  http://www.theserverpages.com/php/manual/en/ref.mhash.php
